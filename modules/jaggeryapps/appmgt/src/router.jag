<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

include("/jagg/jagg.jag");
var modManager = jagg.module("manager");
var PAGE_URL = '/{context}/{+suffix}';
var uriMatcher = new URIMatcher(request.getRequestURI());
var carbon = require('carbon');
var tenantDomain = modManager.getTenantDomain();
var context = carbon.multitenancy.getPrivilegedCarbonContext();
var log = new Log("router");
var action = request.getParameter("action");
var audit = org.wso2.carbon.CarbonConstants.AUDIT_LOG;
var applicationModule = jagg.module("application");

if (uriMatcher.match(PAGE_URL)) {
    var args = uriMatcher.elements();
    if (args.suffix == "site/blocks/user/login/ajax/login.jag" || jagg.getUser()) {
        try {
            context.startTenantFlow();
            context.getThreadLocalCarbonContext().setTenantDomain(tenantDomain, true);
            context.getThreadLocalCarbonContext().setUsername(jagg.getUser());
            // filtered out get actions
            if (action != null && !(action.substring(0,3) == 'get')) {
                audit.info("User : " + jagg.getUser() + ", Action : " + action);
            }
            // check user requesting/passing valid data
            var isUnauthorized = false;
            if (action != "login") {
                // check applicationName
                var applicationName = request.getParameter("applicationName");
                if ((action!= "uploadExistingArchive" && action != "createApplication" && action != "getApplicationHashIdOfMatchingAppName" && action != "generateApplicationHashId" && action != "getVersionHashId")
                    && (applicationName != null && applicationName != 'null')) {
                    var isApplicationNameValid = applicationModule.isApplicationNameValid(applicationName);
                    if (!isApplicationNameValid) {
                        response.status = 401;
                        response.content = "Unauthorized Access. You are not allowed to access the given application";
                        isUnauthorized = true;
                    }
                }
                // check applicationKey
                if (!isUnauthorized) {
                    var applicationKey = request.getParameter("applicationKey");
                    if (applicationKey != null && applicationKey != 'null') {
                        var isApplicationKeyValid = applicationModule.isApplicationKeyValid(applicationKey);
                        if (!isApplicationKeyValid) {
                            response.status = 401;
                            response.content = "Unauthorized Access. You are not allowed to access the given application";
                            isUnauthorized = true;
                        }
                    }
                }
                // check application version hash id
                if (!isUnauthorized) {
                    var versionKey = request.getParameter("versionKey");
                    if (versionKey != null && versionKey != 'null') {
                        var isVersionKeyValid = applicationModule.isAplicationVersionExist(versionKey);
                        if (!isVersionKeyValid) {
                            response.status = 401;
                            response.content = "Unauthorized Access. You are not allowed to access the given application version";
                            isUnauthorized = true;
                        }
                    }
                }
            }

            if (!isUnauthorized) {
                include(args.suffix);
            }

        } catch(e) {
            log.error('error occurred when starting tenant flow in router jag for uri:'+ request.getRequestURI());
            log.error(e);
        } finally  {
            context.endTenantFlow();
        }
    } else {
        response.status = 401;
        response.content = "Unauthorized Access. Please login to continue.";
    }
}
%>
