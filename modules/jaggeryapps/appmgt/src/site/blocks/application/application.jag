<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include('/jagg/constants.jag');

var action = request.getParameter("action");
var applicationModule = jagg.module("application");

(function(){

    if(action == "uploadExistingArchive"){
        var uploadedArtifact = request.getFile("fileUpload");
        var applicationName = request.getParameter("applicationName");
        var appTypeName = request.getParameter("appTypeName");
        var applicationRevision = request.getParameter("applicationRevision");
        applicationModule.uploadExistingArchive(uploadedArtifact, appTypeName, applicationName, applicationRevision);
    }else if(action == "createApplication"){
        var applicationDescription = request.getParameter("applicationDescription");
        var replicas = request.getParameter("replicas");
        var runtimeId = request.getParameter("runtime");
        var runtimeProperties = request.getParameter("runtimeProperties");
        var applicationName = request.getParameter("applicationName");
        var applicationRevision = request.getParameter("applicationRevision");
        var appTypeName = request.getParameter("appTypeName");
        var uploadedFileName = request.getParameter("uploadedFileName");

        var parsedRuntimeProperties;
        if(runtimeProperties != "None" || runtimeProperties != null ){
            parsedRuntimeProperties = parse(runtimeProperties);
        }

        applicationModule.addApplication(applicationName, applicationRevision, applicationDescription, replicas,
                runtimeId, appTypeName, JSON.stringify(parsedRuntimeProperties), uploadedFileName);
        response.status = 200;
        response.message = "Artifact is successfully uploaded!";
    }else if (action == "getApplicationCreationEvents"){

        var applicationName = request.getParameter("applicationName");
        var applicationRevision = request.getParameter("applicationRevision");

        var mod = jagg.module("application");

        log.info("applicationName: " + applicationName);
        log.info("applicationRevision: " + applicationRevision);
        var events = mod.getApplicationCreationEvents(applicationName, applicationRevision);
        print(events);

    }
}());

%>