<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/jagg.jag");
include("/jagg/constants.jag");

var log = new Log();
var mod = jagg.module("application");

(function () {
    var action = request.getParameter("action");
    if (action == "updateCustomUrl") {
        var customUrl = request.getParameter("customUrl");
        var applicationName = request.getParameter("applicationName");

        try {
            mod.addCustomDomain(applicationName, customUrl);
        } catch (e) {
            var message = "Error while configuring custom url: " + customUrl + " for application name: "
                    + applicationName;
            log.error(message);
            log.error(e);
            response.status = 500;
            response.content = message;
        }
    } else if (action == "setDefaultVersion") {
        var applicationName = request.getParameter("applicationName");
        var defaultVersion = request.getParameter("versionName");
        var set = request.getParameter("set");
        try {
            mod.setDefaultVersion(applicationName, defaultVersion, set);
        } catch (e) {
            var message = "Error while setting default url to application : " + applicationName;
            log.error(message);
            log.error(e);
            response.status = 500;
            response.content = message;
        }
    } else if (action == "isCustomDomainAvailable") {
        var customDomain = request.getParameter("customDomain");
        try {
            print(mod.isCustomDomainAvailable(customDomain));
        } catch (e) {
            var message = "Error while checking if the custom domain exists for domain : " + customDomain;
            log.error(message);
            log.error(e);
            response.status = 500;
            response.content = message;
        }
    } else {
        throw new Error("No action specified");
    }
}());

%>

