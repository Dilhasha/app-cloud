<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

include("/jagg/constants.jag");
include("/jagg/jagg.jag");

jagg.template("application", function (inputs, outputs, jagg) {
        var runtimes = outputs.runtimes;
        var appType = outputs.appType;
        var appTypeName = appType.type;

    %>

 <script type="text/javascript">
    var appTypeName = "<%=appType.type%>";
    var retryCount = 0;
    var iconErrorMsg = "Invalid Image";                // used to hold the validation error message of the app icon
    $(document).ready(function(){

            $("#file-upload-block").hide();
            $("#url-upload-block").hide();

            $.each(<%=runtimes%>,function(key,value){
                $("#runtime").append($('<option></option>').val(value.id).html(value.runtimeName));
            });

            var max_fields      = 10; //maximum input boxes allowed
            var wrapper         = $(".input_fields_wrap"); //Fields wrapper
            var add_button      = $(".add_field_button"); //Add button ID

            var x = 1; //initlal text box count
            $(add_button).click(function(e){ //on add input button click
                e.preventDefault();
                if(x < max_fields){ //max input box allowed
                    x++; //text box increment
                    $(wrapper).append('<div class="runtime_property"> <input type="text" class="form-control" name="key">' +
                     '<input type="text" class="form-control" name="value">' +
                     '<a href="#" class="remove_field">Remove</a>' +
                     '</div>'); //add input box
                }
            });

            $(wrapper).on("click",".remove_field", function(e){ //user click on remove text
                e.preventDefault(); $(this).parent('div').remove(); x--;
            });


            $('#application-details').submit(function(e){

                executeAsync(drawProgressWindow());

                $('#add-application').loadingButton('hide');
                $('#add-application-loading').loadingButton('show');

                e.preventDefault();
                var runtimeProperties = [];
                $('.runtime_property').each(function(){
                    var runtimeProperty = {};
                    $(this).children('input').each(function(){
                        if(this.value != ""){
                            runtimeProperty[this.name] = this.value;
                        }
                    });
                    runtimeProperties.push(runtimeProperty);
                });

                var formData = new FormData($(this)[0]);
                var selectedVal = $("#upload-method option:selected").val();

                formData.append('runtimeProperties', JSON.stringify(runtimeProperties));
                formData.append('action', 'createApplication');
                formData.append('appTypeName', appTypeName);


                if(selectedVal == 1){
                    formData.append('uploadedFileName', $("#uploadedFileName").val());
                } else if (selectedVal == 2) {
                    if (appTypeName == "war") {
                        formData.append('uploadedFileName', $("#applicationName").val() + ".war");
                    } else if (appTypeName == "mss") {
                        formData.append('uploadedFileName', $("#applicationName").val() + ".jar");
                    }

                } else if (selectedVal == 3) {
                    formData.append('uploadedFileName', $("#applicationName").val() + ".war");
                }
                $.ajax({
                        url: $(this).attr("action"),
                        type: 'POST',
                        data: formData,
                        async: true,
                        success: function (data) {
                        },
                        cache: false,
                        contentType: false,
                        processData: false
                    });

                return false;
            });

            $('#fileupload').fileupload({

                submit: function(e, data){
                      data.url = "<%=jagg.getAbsoluteUrl('/site/blocks/application/application.jag')%>",
                          data.dataType = 'json',
                          data.formData = {action:'uploadExistingArchive',
                                appTypeName:appTypeName,
                                applicationName:$("#applicationName").val(),
                                applicationRevision:$("#applicationRevision").val()
                          }
                    },
                    progressall: function (e, data) {
                        var progress = parseInt(data.loaded / data.total * 100, 10);
                        $('#progress .progress-bar').css(
                            'width',
                            progress + '%'
                        );
                    },

                    change:function (e, data) {
                         $.each(data.files, function (index, file) {
                            $("#uploadedFileName").val(file.name);
                        });
                        $('#progress .progress-bar').replaceWith("<div class=\"progress-bar progress-bar-success\" style=\"width: 0%;\"></div>");
                    }
            });

        function drawProgressWindow(){
            $('#app_creation_progress_modal').modal({ backdrop: 'static', keyboard: false});
            $("#app_creation_progress_modal").show();
            setInterval(pollEvents, 2000);
        }

        function executeAsync(func) {
            setTimeout(func, 0);
        }

        function pollEvents(){

            jagg.post("../blocks/application/application.jag", {
                action:"getApplicationCreationEvents",
                applicationName:$("#applicationName").val(),
                applicationRevision:$("#applicationRevision").val(),

            },function (result) {
                $("#progress_table").html("");
                var result = jQuery.parseJSON(result);
                var table = "<table class='table' style='width:100%; color:black'>" ;
                for(var i = 0; i < result.length; i++){
                    var statusStyle;
                    var event = result[i];

                    if(event.status == "success"){
                        statusStyle = "success";
                        table = table + "<tr class='" + statusStyle + "'><td>" + event.name + "</td>" +
                                        "<td>" + event.status + "</td><td><i class=\"fa fa-check\"></i></td></tr>";
                    } else if (event.status == "failed") {
                            statusStyle = "danger";
                        table = table + "<tr class='" + statusStyle + "'><td>" + event.name + "</td>" +
                                        "<td>" + event.status + "</td><td><i class=\"fa fa-times\"></i></td></tr>";
                    } else if (event.status == "pending"){
                        statusStyle = "active";
                        table = table + "<tr class='" + statusStyle + "'><td>" + event.name + "</td>" +
                                        "<td>" + event.status + "</td><td><i class=\"fa fa-circle-o-notch fa-spin\"></i></td></tr>";
                    } else if (event.status == "failed"){
                        statusStyle = "active";
                        table = table + "<tr class='" + statusStyle + "'><td>" + event.name + "</td>" +
                                        "<td>" + event.status + "</td><td><i class=\"fa fa-times\"></i></td></tr>";
                    }
                }

                table = table + "</table>";
                $("#progress_table").html(table);

                for(var i = 0; i < result.length; i++){
                    var statusStyle;
                    var event = result[i];
                    if(event.name === "Status" && event.status == "success"){
                        setTimeout(redirectAppHome, 2000);
                        function redirectAppHome(){
                            window.location.replace("home.jag?applicationName=" + $("#applicationName").val());
                        }
                    } else if(event.status == "failed"){
                       setTimeout(redirectAppListing, 2000);
                       function redirectAppListing(){
                           window.location.replace("index.jag");
                       }
                   }
                }
            },function (jqXHR, textStatus, errorThrown) {
                 jagg.message({content: "Error occurred while creating application.", type: 'error'});
            });
        }

        /*** application form validation ***/

         // Classes to be added to parent div of the validated element
        var errorFormGroupClasses = "has-error";        // if validation is failed
        var successFormGroupClasses = "has-success";    // if validation is successful
        var feedBack = "has-feedback";

        // Setting validation options
        // More info: http://jqueryvalidation.org/validate#validate-options


        var creationFormValidationOpts = {
            rules: {                                        // validation rules
                applicationName: {                          // applicationName filed
                    required: true,
                    validateContent: true,
                    maxlength: 8
                },
                applicationRevision: {
                    required: true,
                    validateContent: true,
                    maxlength: 8
                },
                icon: {                                     // app icon field
                    validateAppIcon: true
                }
            },
            onsubmit: false,    // Since we are handling on submit validation on click event of the "Create" button,
            onfocusout: function (element, event) {
            $("#application-details").validate().form();
                return false;
            },                            // here we disabled the form validation on submit
            highlight: function (element, errorClass, validClass) { // this is triggered when the "element" is invalid

            },
            unhighlight: function (element, errorClass, validClass) { // this is triggered when the "element" is valid

            },
            showErrors: function (event, validator) {
                // Disable app creation button if the form is not valid
                if (this.numberOfInvalids() > 0) {
                    $("#add-application").prop("disabled", true);
                } else {
                    $("#add-application").prop("disabled", false);
                }
                this.defaultShowErrors();
            },
            errorPlacement: function (error, element) {
                if ($(element).parent().closest('div').hasClass("input-group")) {
                    error.insertAfter($(element).closest('div'));
                } else {
                    error.insertAfter(element);
                }
            }
        };

        // Register createAppForm with above options for validation
        $("#application-details").validate(creationFormValidationOpts);

        //Initially the create button is disabled
        $("#add-application").prop("disabled", true);

        $.validator.addMethod("validateContent",
            validateContent, getAppCreationErrorMessage);
        $.validator.addMethod("validateAppIcon",
            validateAppIcon, getIconErrorMessage);

        var appCreationErrorMsg = "Invalid value";

        $("#appIcon").change(function() {
             $("#icon").val($("#appIcon").val());

             // validate the app icon upon changes
             var validator = $( "#application-details" ).validate();
             validator.element( "#icon" );
         });

         // Validate Icon
        $("#icon").change(function() {
             var file = $('#icon');
             validateIconImage(file.val(), this.files[0].size);
        });

        function validateAlphaNumericChar(value) {
             var isValueValid = true;

             var patternForSpace = / /g;
             var isSpace = patternForSpace.test(value);

             var patternForNonAlphaNumericChars = /[^\w\s]/gi;
             var isInvalidChar = patternForNonAlphaNumericChars.test(value);

             var patternForUnderscore = /_/g;
             var isUnderScore = patternForUnderscore.test(value);

             if (isSpace == true || isInvalidChar == true || isUnderScore == true) {
                 // Here we are setting the error message as duplicated app name since we are not allowing to change
                 // the app key
                 appCreationErrorMsg =  "Invalid value - Enter a value which has only alphanumeric characters"
                 isValueValid = false;
             } else {
                 isValueValid = true;
             }
             return isValueValid;
        }

        function validateContent(value) {
             var isValueValid = true;
             var valueLength = (value).length;
             if (valueLength == 0) {
                 // Here we are setting the error message as duplicated app name since we are not allowing to change
                 // the app key
                 appCreationErrorMsg = "Invalid value - Enter a value which is not empty";
                 isValueValid = false;
             } else if (!isNaN(value)){
                 // Here we are setting the error message as duplicated app name since we are not allowing to change
                 // the app key
                 appCreationErrorMsg =  "Invalid value - Enter a value which has does not have only numeric characters";
                 isValueValid = false;
             } else {
                 isValueValid = validateAlphaNumericChar(value);
             }
             return isValueValid;
        }

        function getAppCreationErrorMessage(){
           return appCreationErrorMsg;
        }

        $('#url-upload').click(function(){
            $("#url-upload-progress").html("<i class=\"fa fa-circle-o-notch fa-spin\"></i>");
            jagg.post("../blocks/application/application.jag", {
                action:"downloadFromUrl",
                artfactUrl:$("#artifactUrl").val(),
                applicationName:$("#applicationName").val(),
                applicationRevision:$("#applicationRevision").val(),
                appTypeName:appTypeName,
            },function (result) {
                $("#url-upload-progress").html("<i class=\"fa fa-check\"></i>");
            },function (jqXHR, textStatus, errorThrown) {
                jagg.message({content: "Error occurred while downloading artifact from url.", type: 'error', id:'view_log'});
            });
        });

        $( "#upload-method" ).change(function() {
            var selectedVal = $("#upload-method option:selected").val();
            if(selectedVal == 1){
                $("#file-upload-block").show();
                $("#url-upload-block").hide();
            } else if (selectedVal == 2) {
                $("#file-upload-block").hide();
                $("#url-upload-block").show();
            } else if (selectedVal == 3) {
                $("#file-upload-block").hide();
                $("#url-upload-block").hide();
            }
        });
        $("#model_close_button_id").click(function(){
            window.location.replace("index.jag");
        });
    });

     function clearUploadIconField() {
         document.getElementById("icon").value = "";
         document.getElementById("appIcon").value = "";
         var validator = $( "#application-details" ).validate();
         validator.element( "#icon" );
    }

    // Return whether the app icon is validated or not
    function validateAppIcon(value) {
        var file = $("#appIcon");
        if ($("#icon").val() && file.val() != "") {
            return validateIconImage(file.val(), file[0].files[0].size);
        } else {
            return true;
        }
    }

    function validateIconImage(filename, fileSize) {

         var ext = getFileExtension(filename);
         var maxSize = 5242880;
         var isValidExtension = false;
         var isValidIconSize = false;

         // Check extension
         switch (ext.toLowerCase()) {
             case 'jpg':
             case 'jpeg':
             case 'gif':
             case 'bmp':
             case 'png':
                 isValidExtension = true;
                 break;
             default:
                iconErrorMsg = "Invalid image selected for Application Icon - Select a valid image";
                isValidExtension = false;
                break;
         }
         // Check size
         if(!fileSize) {
            iconErrorMsg = "Image file should be non-empty";
            isValidIconSize = false;
         } else if (fileSize != undefined && fileSize > maxSize) {
            iconErrorMsg ="Image file should be less than 5MB";
            isValidIconSize = false;
         } else {
             isValidIconSize = true;
         }
         return (isValidExtension && isValidIconSize);
    }

     // Utility Functions Goes Here
    // extract file extension
    function getFileExtension(filename) {
        var parts = filename.split('.');
        return parts[parts.length - 1];
    }

    function getIconErrorMessage(){
        return iconErrorMsg;
    }
 </script>

    <!-- BOF App factory menu actionbar -->
        <div class="action-bar">
            <a href="<%=jagg.getAbsoluteUrl("/site/pages/select-apptype.jag")%>" class="btn-action">
                <span class="fw-stack fw-lg btn-action-ico">
                    <i class="fw fw-ring fw-stack-2x"></i>
                    <i class="fw fw-left-arrow fw-stack-1x"></i>
                </span> Back to app type selection
        </a>
        <a href="<%=jagg.getAbsoluteUrl("/site/pages/index.jag")%>" class="btn-action">
                <span class="fw-stack fw-lg btn-action-ico">
                    <i class="fw fw-ring fw-stack-2x"></i>
                    <i class="fa fa-mail-reply-all fa-stack-1x"></i>
                </span> Cancel
        </a>
    </div>
<!-- EOF App factory menu actionbar-->

<div class="container-fluid cloud-container">
        <div class="row">
            <div class="col-fixed-left col-fixed-1x">
                <div class="cloud-selected-app-type <%= appType.color%>" id="1">
                    <i class="fw <%= appType.icon%> fw-4x"></i>
                </div>
            </div>
            <div class="col-md-6">
                <div class="cloud-selected-app-type-name">
                    <h1><%= appType.displayName%></h1>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-5 forms">

      <form id="application-details" method="post" action='<%=jagg.getAbsoluteUrl("/site/blocks/application/application.jag")%>' enctype="multipart/form-data">
            <div class="form-group">
            <label for="application-name">Application Name: </label>
            <input id="applicationName" name="applicationName" type="text" class="form-control" placeholder="Enter Application name" />
            </div>

            <div class="form-group">
            <label for="application-revision">Application Revision: </label>
            <input id="applicationRevision" name="applicationRevision" type="text" class="form-control" placeholder="Enter Application revision" />
            </div>

            <div class="form-group">
            <label for="application-description" >Description: </label>
            <textarea name="applicationDescription" class="form-control" rows="3" ></textarea>
            </div>

            <div class="form-group">
            <label for="runtime">Runtime: </label>
            <select name="runtime" id="runtime" class="form-control" ><option value="None" selected="Selected">Select runtime</option></select>
            </div>

            <div class="form-group">
            <label>No Of Replicas: </label>
            <select name="replicas" id="replicas" class="form-control" >
                <option value="None" selected="Selected">Select replicas</option>
                <option value="1" >1</option>
                <option value="2" >2</option>
            </select>
            </div>

            <div class="form-group" id="upload-method">
            <label>Artifact upload method:</label>
            <select name="select-upload-method" id="select-upload-method" class="form-control" >
                <option value="0" selected="Selected">Select upload method</option>
                <option value="1">Upload from file system</option>
                <option value="2">Upload from url</option>
                <option value="3">Upload wso2 sample</option>
            </select>
            </div>

            <div class="form-group" id="file-upload-block">
                <label>Upload Artifact: </label>
                <div class="input-group">
                    <input id="uploadedFileName" type="text" class="form-control" readonly>
                    <span class="input-group-btn">
                       <span class="btn btn-primary btn-file">
                           Upload&hellip; <input id="fileupload" type="file" name="fileUpload" multiple>
                       </span>
                    </span>
                </div>
                <div id="progress" class="progress">
                    <div class="progress-bar progress-bar-success" style="width: 0%;"></div>
                </div>
            </div>

            <div class="form-group" id="url-upload-block">
                <label for="artifactUrl">Upload from URL: </label>
                    <input id="artifactUrl" name="artifactUrl" type="text" class="form-control" placeholder="Enter artifact url" />
                    <a class="btn btn-info" id="url-upload">Upload From URL
                        <span id="url-upload-progress"><span>
                    </a>
            </div>

            <div class="form-group">
                <label for="application-icon">Icon:
                    <i class="fa fa-question-circle help-tips" data-toggle="tooltip" data-placement="left"
                title="Recommended image size : 300 x 300 pixels, file size 70 k (maximum)"></i>
                </label>
                <div class="input-group">
                    <input type="text" id="icon" name="icon" class="form-control" readonly>
                    <span class="input-group-btn">
                        <span class="btn btn-primary btn-file">
                            Browse <input type="file" id="appIcon" name="appIcon"/>
                        </span>
                        <span class="btn btn-primary btn-file" onclick="clearUploadIconField()" id="clear">
                            Clear
                        </span>
                    </span>
                </div>
            </div>

            <div class="form-group">
            <div class="form-inline input_fields_wrap">
                <button class="add_field_button btn btn-info">Add More Properties</button>
                <div class="runtime_property">
                    <input type="text" class="form-control" name="key">
                    <input type="text" class="form-control" name="value">
                </div>
            </div>
            </div>
            <div class="form-group">
                <button class="cu-btn cu-btn-sm cu-btn-blue cu-btn-position" id="add-application">
                    <span class="fw-stack fw-lg btn-action-ico">
                        <i class="fw fw-ring fw-stack-2x"></i>
                        <i class="fw fw-add fw-stack-1x"></i>
                    </span>
                        Create
                </button>
                <button type="button" class="cu-btn cu-btn-sm cu-btn-blue cu-btn-position" id="add-application-loading" style="display:none" >
                    <span class="fw-stack fw-lg btn-action-ico">
                        <i class="fw fw-ring fw-stack-2x"></i>
                        <i class="fw fw-add fw-stack-1x"></i>
                    </span>
                    Creating
                </button>
            </div>
        </form>
        </div>
        </div>
      </div><!-- /.container -->

      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/vendor/jquery.ui.widget.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jquery.fileupload.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jquery.iframe-transport.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/jquery.validate.min.js'))%>"></script>
      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/additional-methods.min.js'))%>"></script>

    <!-- --------------------------------------- Overlay ----------------------------------------- -->
    <div class="modal fade build-logs-modal" id="app_creation_progress_modal">
        <div class="modal-dialog modal-dialog-margin-top-md ">
            <div class="modal-content">
                <div class="modal-header">
                    <button id="model_close_button_id" type="button" class="close" data-dismiss="alert">
                        <span aria-hidden="true">&times;</span>
                        <span class="sr-only">Close</span>
                    </button>
                    <h4 class="modal-title" id="modal-title">Application Creation Progress</h4>
                </div>
                <div class="modal-body">
                    <div class="container-fluid">
                        <div class="row">
                            <div id="progress_table" class="col-xs-12 col-md-12 section-title">
                            <i class="fa fa-2x fa-circle-o-notch fa-spin"></i>
                        </div>
                    </div>
                </div>
            </div>
       </div><!-- /.modal-content -->
     </div><!-- /.modal -->

      <script src="<%=jagg.getAbsoluteUrl(jagg.getThemeFile('js/custom/custom.js'))%>"></script>
    <%
}); %>