<%
/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 *   WSO2 Inc. licenses this file to you under the Apache License,
 *   Version 2.0 (the "License"); you may not use this file except
 *   in compliance with the License.
 *   You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing,
 *   software distributed under the License is distributed on an
 *   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 *   KIND, either express or implied.  See the License for the
 *   specific language governing permissions and limitations
 *   under the License.
 */

jagg.module("application", {
    addApplication:function () {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").addApplication.apply(this, arguments);
    },

    getAllAppTypes:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getAllAppTypes.apply(this, arguments);
    },

    getAllRuntimes:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getAllRuntimes.apply(this, arguments);
    },

    getAllApplications:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getAllApplications.apply(this, arguments);
    },
    getApplicationByNameRevision:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getApplicationByNameRevision.apply(this, arguments);
    },
    getEnvVariablesByNameRevision:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getEnvVariablesByNameRevision.apply(this, arguments);
    },
    updateApplicationRuntimeProperty:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").updateApplicationRuntimeProperty.apply(this, arguments);
    },
    deleteApplicationRuntimeProperty:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").deleteApplicationRuntimeProperty.apply(this, arguments);
    },
    addApplicationRuntimeProperty:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").addApplicationRuntimeProperty.apply(this, arguments);
    },
    getTags:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getTags.apply(this, arguments);
    },
    updateTag:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").updateTag.apply(this, arguments);
    },
    deleteTag:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").deleteTag.apply(this, arguments);
    },
    addTag:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").addTag.apply(this, arguments);
    },
    getAllRevisionsOfApplication:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getAllRevisionsOfApplication.apply(this, arguments);
    },
    getDeploymentURL:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getDeploymentURL.apply(this, arguments);
    },
    getSelectedRevisionFromSession:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getSelectedRevisionFromSession.apply(this, arguments);
    },
    putSelectedRevisionToSession:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").putSelectedRevisionToSession.apply(this, arguments);
    },
    getApplicationCreationEvents:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").getApplicationCreationEvents.apply(this, arguments);
    },
    uploadExistingArchive:function() {
        return jagg.require(jagg.getModulesDir() + "application/application.jag").uploadExistingArchive.apply(this, arguments);
    },
    downloadFromUrl:function() {
            return jagg.require(jagg.getModulesDir() + "application/application.jag").downloadFromUrl.apply(this, arguments);
    }
});
%>